#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cassert>
#include <cmath>
#include <string>
#include <queue>
#include <set>
#include <map>
#include <cstdlib>

using namespace std;

#define INF 1e+9
#define mp make_pair
#define pb push_back
#define fi first
#define fs first
#define se second
#define i64 long long
#define li long long
#define lint long long
#define pii pair<int, int>
#define vi vector<int>

#define forn(i, n) for (int i = 0; i < (int)n; i++)
#define fore(i, b, e) for (int i = (int)b; i <= (int)e; i++)

#define TASKNAME "greater"

void solve(int test_number);

int main() {
    ios_base::sync_with_stdio(false);
    cout.setf(ios::fixed);
    cout.precision(9);
    cerr.setf(ios::fixed);
    cerr.precision(3);
#ifdef LOCAL
    freopen("inp", "r", stdin);
    //freopen("outp", "w", stdout);
#else
     freopen(TASKNAME ".in", "r", stdin);
     freopen(TASKNAME ".out", "w", stdout);
#endif
    //int n = 1;
//    scanf("%d", &n);
    int i = 1;
    while(true)
        solve(i);
}

const double arr[] = {

0.2500000000, 0.2500000000, 0.3333333333, 0.3333333333, 0.3750000000, 0.3750000000, 0.4000000000, 0.4000000000, 0.4166666667, 0.4166666667, 0.4285714286, 0.4285714286, 0.4375000000, 0.4375000000, 0.4444444444, 0.4444444444, 0.4500000000, 0.4500000000, 0.3125000000, 0.3125000000, 0.4197530864, 0.4074074074, 0.4453125000, 0.4296875000, 0.4640000000, 0.4464000000, 0.4714506173, 0.4498456790, 0.4752186589, 0.4556434819, 0.4794921875, 0.4572753906, 0.4798049078, 0.4587715287, 0.4825000000, 0.4601000000, 0.3437500000, 0.3437500000, 0.4513031550, 0.4320987654, 0.4733886719, 0.4453125000, 0.4813440000, 0.4466560000, 0.4821459191, 0.4486454047, 0.4847470017, 0.4497020799, 0.4870758057, 0.4495086670, 0.4862647029, 0.4474984053, 0.4860210000, 0.4487690000, 0.3632812500, 0.3632812500, 0.4657826551, 0.4415485444, 0.4824829102, 0.4500732422, 0.4881945600, 0.4486016000, 0.4883729376, 0.4430863959, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3769531250, 0.3769531250, 0.4737760165, 0.4466290708, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3872070312, 0.3872070312, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, 0.2500000000, 0.2500000000, 0.3333333333, 0.3333333333, 0.3750000000, 0.3750000000, 0.4000000000, 0.4000000000, 0.4166666667, 0.4166666667, 0.4285714286, 0.4285714286, 0.4375000000, 0.4375000000, 0.4444444444, 0.4444444444, 0.4500000000, 0.4500000000, 0.3125000000, 0.3125000000, 0.4197530864, 0.4074074074, 0.4453125000, 0.4296875000, 0.4640000000, 0.4464000000, 0.4714506173, 0.4498456790, 0.4752186589, 0.4556434819, 0.4794921875, 0.4572753906, 0.4798049078, 0.4587715287, 0.4825000000, 0.4601000000, 0.3437500000, 0.3437500000, 0.4513031550, 0.4320987654, 0.4733886719, 0.4453125000, 0.4813440000, 0.4466560000, 0.4821459191, 0.4486454047, 0.4847470017, 0.4497020799, 0.4870758057, 0.4495086670, 0.4862647029, 0.4474984053, 0.4860210000, 0.4487690000, 0.3632812500, 0.3632812500, 0.4657826551, 0.4415485444, 0.4824829102, 0.4500732422, 0.4881945600, 0.4486016000, 0.4883729376, 0.4430863959, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3769531250, 0.3769531250, 0.4737760165, 0.4466290708, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3872070312, 0.3872070312, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, 0.2500000000, 0.2500000000, 0.3333333333, 0.3333333333, 0.3750000000, 0.3750000000, 0.4000000000, 0.4000000000, 0.4166666667, 0.4166666667, 0.4285714286, 0.4285714286, 0.4375000000, 0.4375000000, 0.4444444444, 0.4444444444, 0.4500000000, 0.4500000000, 0.3125000000, 0.3125000000, 0.4197530864, 0.4074074074, 0.4453125000, 0.4296875000, 0.4640000000, 0.4464000000, 0.4714506173, 0.4498456790, 0.4752186589, 0.4556434819, 0.4794921875, 0.4572753906, 0.4798049078, 0.4587715287, 0.4825000000, 0.4601000000, 0.3437500000, 0.3437500000, 0.4513031550, 0.4320987654, 0.4733886719, 0.4453125000, 0.4813440000, 0.4466560000, 0.4821459191, 0.4486454047, 0.4847470017, 0.4497020799, 0.4870758057, 0.4495086670, 0.4862647029, 0.4474984053, 0.4860210000, 0.4487690000, 0.3632812500, 0.3632812500, 0.4657826551, 0.4415485444, 0.4824829102, 0.4500732422, 0.4881945600, 0.4486016000, 0.4883729376, 0.4430863959, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3769531250, 0.3769531250, 0.4737760165, 0.4466290708, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3872070312, 0.3872070312, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, 0.2500000000, 0.2500000000, 0.3333333333, 0.3333333333, 0.3750000000, 0.3750000000, 0.4000000000, 0.4000000000, 0.4166666667, 0.4166666667, 0.4285714286, 0.4285714286, 0.4375000000, 0.4375000000, 0.4444444444, 0.4444444444, 0.4500000000, 0.4500000000, 0.3125000000, 0.3125000000, 0.4197530864, 0.4074074074, 0.4453125000, 0.4296875000, 0.4640000000, 0.4464000000, 0.4714506173, 0.4498456790, 0.4752186589, 0.4556434819, 0.4794921875, 0.4572753906, 0.4798049078, 0.4587715287, 0.4825000000, 0.4601000000, 0.3437500000, 0.3437500000, 0.4513031550, 0.4320987654, 0.4733886719, 0.4453125000, 0.4813440000, 0.4466560000, 0.4821459191, 0.4486454047, 0.4847470017, 0.4497020799, 0.4870758057, 0.4495086670, 0.4862647029, 0.4474984053, 0.4860210000, 0.4487690000, 0.3632812500, 0.3632812500, 0.4657826551, 0.4415485444, 0.4824829102, 0.4500732422, 0.4881945600, 0.4486016000, 0.4883729376, 0.4430863959, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3769531250, 0.3769531250, 0.4737760165, 0.4466290708, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3872070312, 0.3872070312, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, 0.2500000000, 0.2500000000, 0.3333333333, 0.3333333333, 0.3750000000, 0.3750000000, 0.4000000000, 0.4000000000, 0.4166666667, 0.4166666667, 0.4285714286, 0.4285714286, 0.4375000000, 0.4375000000, 0.4444444444, 0.4444444444, 0.4500000000, 0.4500000000, 0.3125000000, 0.3125000000, 0.4197530864, 0.4074074074, 0.4453125000, 0.4296875000, 0.4640000000, 0.4464000000, 0.4714506173, 0.4498456790, 0.4752186589, 0.4556434819, 0.4794921875, 0.4572753906, 0.4798049078, 0.4587715287, 0.4825000000, 0.4601000000, 0.3437500000, 0.3437500000, 0.4513031550, 0.4320987654, 0.4733886719, 0.4453125000, 0.4813440000, 0.4466560000, 0.4821459191, 0.4486454047, 0.4847470017, 0.4497020799, 0.4870758057, 0.4495086670, 0.4862647029, 0.4474984053, 0.4860210000, 0.4487690000, 0.3632812500, 0.3632812500, 0.4657826551, 0.4415485444, 0.4824829102, 0.4500732422, 0.4881945600, 0.4486016000, 0.4883729376, 0.4430863959, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3769531250, 0.3769531250, 0.4737760165, 0.4466290708, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3872070312, 0.3872070312, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, 0.2500000000, 0.2500000000, 0.3333333333, 0.3333333333, 0.3750000000, 0.3750000000, 0.4000000000, 0.4000000000, 0.4166666667, 0.4166666667, 0.4285714286, 0.4285714286, 0.4375000000, 0.4375000000, 0.4444444444, 0.4444444444, 0.4500000000, 0.4500000000, 0.3125000000, 0.3125000000, 0.4197530864, 0.4074074074, 0.4453125000, 0.4296875000, 0.4640000000, 0.4464000000, 0.4714506173, 0.4498456790, 0.4752186589, 0.4556434819, 0.4794921875, 0.4572753906, 0.4798049078, 0.4587715287, 0.4825000000, 0.4601000000, 0.3437500000, 0.3437500000, 0.4513031550, 0.4320987654, 0.4733886719, 0.4453125000, 0.4813440000, 0.4466560000, 0.4821459191, 0.4486454047, 0.4847470017, 0.4497020799, 0.4870758057, 0.4495086670, 0.4862647029, 0.4474984053, 0.4860210000, 0.4487690000, 0.3632812500, 0.3632812500, 0.4657826551, 0.4415485444, 0.4824829102, 0.4500732422, 0.4881945600, 0.4486016000, 0.4883729376, 0.4430863959, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3769531250, 0.3769531250, 0.4737760165, 0.4466290708, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3872070312, 0.3872070312, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.3952636719, 0.3952636719, -1.0, -1.0, -1.0, -1.0, 
};
void solve(int test_number)
{
    int d, b;
    scanf("%d%d", &d, &b);
    if (d == 0)
        exit(0);
    int pos = (d - 1) * (18) + (b - 2) * 2;
    double ans1 = arr[pos];
    double ans2 = arr[pos + 1];
    printf("%.10lf %.10lf\n", ans1, ans2);
    //scanf("%d%d", &d, &b);
    //printf("%.5lf\n", arr[1][1]);
}
